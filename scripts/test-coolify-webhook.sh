#!/bin/bash
# Script para simular o acionamento do webhook do Coolify localmente
# √ötil para testar a configura√ß√£o antes de implement√°-la no ambiente real

# Obter par√¢metros do ambiente ou da linha de comando
WEBHOOK_URL=${1:-$COOLIFY_WEBHOOK}
TOKEN=${2:-$COOLIFY_TOKEN}
REF=${3:-"refs/heads/main"}

# Verificar se os par√¢metros necess√°rios foram fornecidos
if [ -z "$WEBHOOK_URL" ]; then
    echo "‚ö†Ô∏è  URL do webhook n√£o fornecida!"
    echo "Use o primeiro par√¢metro ou defina a vari√°vel de ambiente COOLIFY_WEBHOOK"
    exit 1
fi

if [ -z "$TOKEN" ]; then
    echo "‚ö†Ô∏è  Token de autentica√ß√£o n√£o fornecido!"
    echo "Use o segundo par√¢metro ou defina a vari√°vel de ambiente COOLIFY_TOKEN"
    exit 1
fi

echo "üöÄ Testando webhook do Coolify"
echo "URL: $WEBHOOK_URL"
echo "Refer√™ncia: $REF"

# Executa a requisi√ß√£o HTTP
echo "üì§ Enviando requisi√ß√£o..."
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$WEBHOOK_URL" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d "{\"ref\": \"$REF\"}")

# Extrai o status code e o corpo da resposta
HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | head -n -1)

# Verifica o status da resposta
if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
    echo "‚úÖ Webhook acionado com sucesso!"
    echo "Resposta:"
    echo "$BODY" | jq || echo "$BODY"  # Tenta formatar como JSON se jq estiver dispon√≠vel
else
    echo "‚ùå Erro ao acionar webhook. Status: $HTTP_STATUS"
    echo "Resposta:"
    echo "$BODY" | jq || echo "$BODY"  # Tenta formatar como JSON se jq estiver dispon√≠vel
    exit 1
fi

echo -e "\nüìã Pr√≥ximos passos:"
echo "1. Acesse o painel do Coolify para verificar se o deploy foi iniciado"
echo "2. Verifique os logs do deploy para identificar poss√≠veis problemas"
echo "3. Confirme se o servi√ßo est√° em execu√ß√£o ap√≥s o deploy"
